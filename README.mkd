# VimLC - VimScript to Lua/Vim9Script Transpiler

VimLC is a transpiler that converts VimScript to Lua or Vim9Script, making it easier for developers to migrate legacy Vim plugins to NeoVim or Vim9+. The tool is built upon a fork of go-vimlc, which was itself transpiled from a vimlc, a VimScript parser implemented in VimScript.

## Features

- Converts VimScript to Lua or Vim9Script
- Reports syntax and limited semantic errors
- Save time and effort converting legacy Vim plugins to NeoVim or Vim9+

It's important to note that the tool is not intended to be a full-fledged compiler and provides limited support for semantic analysis. Moreover, since the original code was transpiled from VimScript, it will require refactoring to idiomatic Go.

This project is a rewrite of an experimental project that was originally built for my personal use.

## Installation

To use VimLC, you must have Go 1.18+ installed on your system. To install VimLC, follow these steps:

1. Clone this repository: `git clone https://github.com/geekstakulus/go-vimlc.git`
2. Navigate to the VimLC directory: `cd go-vimlc`
3. Install the VimLC binary: `go install cmd/vimlc/main.go`

## Usage

To use VimLC, simply run the following command:

```bash

vimlc /path/to/vimscript/file.vim
```

This will transpile the VimScript file to Lua or Vim9Script, depending on the chosen output format, and output the result to stdout. Alternatively, you can specify an output file with the `-o` flag:

```bash
vimlc /path/to/vimscript/file.vim -o /path/to/output/file.lua
```

By default, VimLC will display parsing errors to stderr. To disable this behavior, use the `-quiet` flag:

```bash
vimlc /path/to/vimscript/file.vim -quiet
```

## As a Lint Tool

You can use it to detect syntax error. It doesn't check much things compared to existing lint tool for Vim script, but it runs fast even if you pass lots of files to it.

```bash
$ vimlc **/*.vim > /dev/null
test/test_err_funcarg_duplicate.vim:1:20: vimlc: E853: Duplicate argument name: b
test/test_err_funcarg_firstline.vim:1:14: vimlc: E125: Illegal argument: firstline
test/test_err_funcarg_lastline.vim:1:14: vimlc: E125: Illegal argument: lastline
test/test_err_funcarg.vim:1:44: vimlc: E125: Illegal argument: a:bar
test/test_err_funcname.vim:11:10: vimlc: E128: Function name must start with a capital or contain a colon: foo
test/test_err_toomanyarg.vim:1:9: vimlc: E740: Too many arguments for function
test/test_err_varname.vim:1:5: vimlc: E461: Illegal variable name: foo:bar
test/test_issue16_err_line_continuation_lnum2.vim:3:9: vimlc: E488: Trailing characters: z
test/test_issue16_err_line_continuation_lnum.vim:2:9: vimlc: E488: Trailing characters: z
test/test_neo_tnoremap.vim:1:1: vimlc: E492: Not an editor command: tnoremap <Esc> <C-\><C-N>
test/test_noneo_tnoremap.vim:1:1: vimlc: E492: Not an editor command: tnoremap <Esc> <C-\><C-N>
test/test_xxx_colonsharp.vim:2:6: vimlc: unexpected token: :
test/test_xxx_err_funcarg_space_comma.vim:19:14: vimlc: E475: Invalid argument: White space is not allowed before comma
```
```vimscript
" sample
command! LintVimLC :silent cexpr system('vimlc ' . expand('%') . ' > /dev/null')
augroup lint-vimlc
  autocmd!
  autocmd BufWritePost *.vim LintVimLC
augroup END
```

## Contributing

Contributions to VimLC are welcome and encouraged! To contribute, please follow these steps:

1. Fork this repository
2. Create a new branch: `git checkout -b my-feature-branch`
3. Make your changes and commit them: `git commit -am 'Add some feature'`
4. Push your changes to your fork: `git push origin my-feature-branch`
5. Create a pull request

Please be sure to include tests for your changes, and make sure all tests pass before submitting your pull request.

## Credit

[@ynkdir](https://github.com/ynkdir) for https://github.com/ynkdir/vim-vimlparser [@vim-jp](https://github.com/vim-jp) for https://github.com/vim-jp/go-vimlparser

## ![bird](https://github.githubassets.com/images/icons/emoji/unicode/1f426.png) Author

Original Author: haya14busa (https://github.com/haya14busa)

Maintenance Author: Fidel H Viegas (https://github.com/geekstakulus)

## License

VimLC is released under the MIT License. See [LICENSE](LICENSE) for more information.
